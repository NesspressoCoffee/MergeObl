@model CommonSolutions.DTO.DtoVuelo
<link rel="stylesheet" href="~/Content/CSS/Vuelos.css">

@{
    ViewBag.Title = "manVuelo";
}

<h2>Vuelos</h2>
<p class="botonArriba">
    <a class="botonArriba" href="@Url.Action("Admin", "Home")">Menu</a>
    <a href="@Url.Action("LogOut", "Login")" class="notification">Salir</a>
</p>
<hr />

@using (Html.BeginForm("addVuelo", "Vuelo"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.idVuelo, new { htmlAttributes = new { @class = "form-control", id = "idVuelo", @Value = 0, } })
            </div>
        </div>

        @if (ViewBag.modify != null && ViewBag.modify == true)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.numeroVuelo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.numeroVuelo, new { htmlAttributes = new { @class = "form-control", id = "numeroVuelo", onchange = "saveDatos()", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.numeroVuelo, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.numeroVuelo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.numeroVuelo, new { htmlAttributes = new { @class = "form-control", id = "numeroVuelo", onchange = "saveDatos()" } })
                    @Html.ValidationMessageFor(model => model.numeroVuelo, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.horasVuelo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.horasVuelo, new { htmlAttributes = new { @class = "form-control", id = "horasVuelo", onchange = "saveDatos()" } })
                @Html.ValidationMessageFor(model => model.horasVuelo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.origen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.origen, (ICollection<SelectListItem>)ViewBag.listAeropuerto, "-   Origen   -", new { @class = "form-control", id = "origen", onchange = "saveDatos()" })
                @Html.ValidationMessageFor(model => model.origen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.destino, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.destino, (ICollection<SelectListItem>)ViewBag.listAeropuerto, "-   Destino   -", new { @class = "form-control", id = "destino", onchange = "saveDatos()" })
                @Html.ValidationMessageFor(model => model.destino, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.avionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.avionId, new { htmlAttributes = new { @class = "form-control", id = "avionId", onchange = "saveDatos()" } })
                @Html.ValidationMessageFor(model => model.avionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.visa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.visa, (ICollection<SelectListItem>)ViewBag.listVisa, "-   Visa   -", new { @class = "form-control", id = "visa", onchange = "saveDatos()" })
                @Html.ValidationMessageFor(model => model.visa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.horaSalida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.horaSalida, new { htmlAttributes = new { @class = "form-control", id = "horaSalida", onchange = "saveDatos()" } })
                @Html.ValidationMessageFor(model => model.horaSalida, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.modify != null && ViewBag.modify == true)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.fechaSalida, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaSalida, new { htmlAttributes = new { @class = "form-control", id = "fechaSalida", onchange = "saveDatos()" } })
                    @Html.ValidationMessageFor(model => model.fechaSalida, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.estado, (ICollection<SelectListItem>)ViewBag.listEstado, "-   Estado   -", new { @class = "form-control", id = "estado", onchange = "saveDatos()" })
                    @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        @if (ViewBag.modify == null || ViewBag.modify == false)
        {

            <div class="form-group">
                @Html.LabelFor(model => model.fechaComienzo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaComienzo, new { htmlAttributes = new { @class = "form-control", id = "fechaComienzo", onchange = "saveDatos()" } })
                    @Html.ValidationMessageFor(model => model.fechaComienzo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fechaLimite, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaLimite, new { htmlAttributes = new { @class = "form-control", id = "fechaLimite", onchange = "saveDatos()" } })
                    @Html.ValidationMessageFor(model => model.fechaLimite, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @if (Model == null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.precioEconomy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.precioEconomy, new { htmlAttributes = new { @class = "form-control", id = "precioEconomy", onchange = "saveDatos()", @Value = 0 } })
                    @Html.ValidationMessageFor(model => model.precioEconomy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.precioPremium, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.precioPremium, new { htmlAttributes = new { @class = "form-control", id = "precioPremium", onchange = "saveDatos()", @Value = 0 } })
                    @Html.ValidationMessageFor(model => model.precioPremium, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.precioBusiness, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.precioBusiness, new { htmlAttributes = new { @class = "form-control", id = "precioBusiness", onchange = "saveDatos()", @Value = 0 } })
                    @Html.ValidationMessageFor(model => model.precioBusiness, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.precioFirstClass, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.precioFirstClass, new { htmlAttributes = new { @class = "form-control", id = "precioFirstClass", onchange = "saveDatos()", @Value = 0 } })
                    @Html.ValidationMessageFor(model => model.precioFirstClass, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.precioEconomy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.precioEconomy, new { htmlAttributes = new { @class = "form-control", id = "precioEconomy", onchange = "saveDatos()" } })
                    @Html.ValidationMessageFor(model => model.precioEconomy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.precioPremium, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.precioPremium, new { htmlAttributes = new { @class = "form-control", id = "precioPremium", onchange = "saveDatos()" } })
                    @Html.ValidationMessageFor(model => model.precioPremium, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.precioBusiness, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.precioBusiness, new { htmlAttributes = new { @class = "form-control", id = "precioBusiness", onchange = "saveDatos()" } })
                    @Html.ValidationMessageFor(model => model.precioBusiness, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.precioFirstClass, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.precioFirstClass, new { htmlAttributes = new { @class = "form-control", id = "precioFirstClass", onchange = "saveDatos()" } })
                    @Html.ValidationMessageFor(model => model.precioFirstClass, "", new { @class = "text-danger" })
                </div>
            </div>
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<p class="text-danger">@Html.Raw(ViewBag.mensaje)</p>

@if (ViewBag.modify == null || ViewBag.modify == false)
{
    <div class="dias">
        @if (ViewBag.diasVuelo == null || ViewBag.diasVuelo.Count == 0)
        {
            <label>D</label><input type="checkbox" id="Sunday" onchange="saveDia('Sunday')" />
            <label>L</label><input type="checkbox" id="Monday" onchange="saveDia('Monday')" />
            <label>M</label><input type="checkbox" id="Tuesday" onchange="saveDia('Tuesday')" />
            <label>X</label><input type="checkbox" id="Wednesday" onchange="saveDia('Wednesday')" />
            <label>J</label><input type="checkbox" id="Thursday" onchange="saveDia('Thursday')" />
            <label>V</label><input type="checkbox" id="Friday" onchange="saveDia('Friday')" />
            <label>S</label><input type="checkbox" id="Saturday" onchange="saveDia('Saturday')" />

        }
        else
        {
            for (int i = 0; i < ViewBag.diasVuelo.Count; i++)
            {
                if (ViewBag.diasVuelo[i] == "Sunday")
                {
                    <label>D</label><input type="checkbox" id="Sunday" onchange="saveDia('Sunday')" checked />
                    break;
                }
                else
                {
                    if (i == ViewBag.diasVuelo.Count - 1)
                    {
                        <label>D</label><input type="checkbox" id="Sunday" onchange="saveDia('Sunday')" />
                    }
                }
            }
            for (int i = 0; i < ViewBag.diasVuelo.Count; i++)
            {
                if (ViewBag.diasVuelo[i] == "Monday")
                {
                    <label>L</label><input type="checkbox" id="Monday" onchange="saveDia('Monday')" checked />
                    break;
                }
                else
                {
                    if (i == ViewBag.diasVuelo.Count - 1)
                    {
                        <label>L</label><input type="checkbox" id="Monday" onchange="saveDia('Monday')" />
                    }
                }
            }

            for (int i = 0; i < ViewBag.diasVuelo.Count; i++)
            {
                if (ViewBag.diasVuelo[i] == "Tuesday")
                {
                    <label>M</label><input type="checkbox" id="Tuesday" onchange="saveDia('Tuesday')" checked />
                    break;
                }
                else
                {
                    if (i == ViewBag.diasVuelo.Count - 1)
                    {
                        <label>M</label><input type="checkbox" id="Tuesday" onchange="saveDia('Tuesday')" />
                    }
                }
            }

            for (int i = 0; i < ViewBag.diasVuelo.Count; i++)
            {
                if (ViewBag.diasVuelo[i] == "Wednesday")
                {
                    <label>X</label><input type="checkbox" id="Wednesday" onchange="saveDia('Wednesday')" checked />
                    break;
                }
                else
                {
                    if (i == ViewBag.diasVuelo.Count - 1)
                    {
                        <label>X</label><input type="checkbox" id="Wednesday" onchange="saveDia('Wednesday')" />
                    }
                }
            }

            for (int i = 0; i < ViewBag.diasVuelo.Count; i++)
            {
                if (ViewBag.diasVuelo[i] == "Thursday")
                {
                    <label>J</label><input type="checkbox" id="Thursday" onchange="saveDia('Thursday')" checked />
                    break;
                }
                else
                {
                    if (i == ViewBag.diasVuelo.Count - 1)
                    {
                        <label>J</label><input type="checkbox" id="Thursday" onchange="saveDia('Thursday')" />
                    }
                }
            }

            for (int i = 0; i < ViewBag.diasVuelo.Count; i++)
            {
                if (ViewBag.diasVuelo[i] == "Friday")
                {
                    <label>V</label><input type="checkbox" id="Friday" onchange="saveDia('Friday')" checked />
                    break;
                }
                else
                {
                    if (i == ViewBag.diasVuelo.Count - 1)
                    {
                        <label>V</label><input type="checkbox" id="Friday" onchange="saveDia('Friday')" />
                    }
                }
            }

            for (int i = 0; i < ViewBag.diasVuelo.Count; i++)
            {
                if (ViewBag.diasVuelo[i] == "Saturday")
                {
                    <label>S</label><input type="checkbox" id="Saturday" onchange="saveDia('Saturday')" checked />
                    break;
                }
                else
                {
                    if (i == ViewBag.diasVuelo.Count - 1)
                    {
                        <label>S</label><input type="checkbox" id="Saturday" onchange="saveDia('Saturday')" />
                    }
                }
            }

        }

    </div>
}

@if (ViewBag.modify == null || ViewBag.modify == false)
{
    <div class="fechas">
        <form id="addHoraToSessionForm" action="/Vuelo/addFechaToSession" method="Post">

            <input type="date" name="fecha" />
            <input type="time" name="hora" id="horaExclusiva" />

            <button type="submit" form="addHoraToSessionForm">+</button>
            @*@if (ViewBag.mensajeErrorCategoria != null)
                {
                    <p>@Html.Raw(ViewBag.mensajeErrorCategoria)</p>
                }*@
        </form>

        <div class="tablaFechasExclusivas" runat="server">
            <table>
                <thead>
                    <tr>
                        <th>Fecha</th>
                        <th>Hora</th>
                        <th>Accion</th>
                    </tr>
                </thead>
                <tbody id="tablaFechasExclusivas">
                    @if (ViewBag.listFechasExclusivas != null)
                    {
                        foreach (var item in ViewBag.listFechasExclusivas)
                        {
                            <tr class="datos">
                                <td>@item.fecha.ToString("d")</td>
                                <td>@item.hora.ToString("hh:mm")</td>
                                <td>@Html.ActionLink("Borrar", "removeFechaFromSession", new { fecha = @item.fecha })</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
}

<div class="tablaVuelo">
    <table>
        <thead>
            <tr>
                <th style="width: 5%">ID</th>
                <th style="width: 5%">Numero</th>
                <th style="width: 15%">Salida</th>
                <th style="width: 15%">Llegada</th>
                <th style="width: 5%">Horas</th>
                <th style="width: 5%">Origen</th>
                <th style="width: 5%">Destino</th>
                <th style="width: 10%">Tipo</th>
                <th style="width: 5%">Avion</th>
                <th style="width: 5%">Visa</th>
                <th style="width: 10%">Estado</th>
                <th style="width: 10%" colspan="2">Accion</th>
            </tr>
        </thead>
        <tbody id="tablaCategoria">
            @if (ViewBag.colVuelo != null)
            {
                foreach (var item in ViewBag.colVuelo)
                {
                    <tr class="datos">
                        <td>@item.idVuelo</td>
                        <td>@item.numeroVuelo</td>
                        <td>@item.fechaSalida</td>
                        <td>@item.fechaLlegada</td>
                        <td>@item.horasVuelo</td>
                        <td>@item.origen</td>
                        <td>@item.destino</td>
                        <td>@item.tipo</td>
                        <td>@item.avionId</td>
                        <td>@item.visa</td>
                        <td>@item.estado</td>
                        @if (item.estado == "Programado")
                        {
                            <td>@Html.ActionLink("Editar", "modifyVuelo", new { idVuelo = @item.idVuelo })</td>
                            <td>@Html.ActionLink("Borrar", "deleteVuelo", new { idVuelo = @item.idVuelo })</td>
                        }
                        else
                        {
                            <td></td>
                            <td></td>
                        }
                    </tr>
                }
            }


        </tbody>
    </table>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/AppScripts/manVuelo.js"></script>
}

